{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactIItem/ContactItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","App.module.css","components/ContactsList/ContactsList.module.css","components/Buttons/Button.module.css","components/Message/Message.module.css","components/ContactForm/ContactForm.js","components/Container/Container.js","components/Buttons/Button.js","components/ContactIItem/ContactItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/Message/Message.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","createIdName","uuidv4","createIdNumber","saveContact","e","currentTarget","value","setState","submitContact","preventDefault","props","OnSubmit","reset","onSubmit","this","className","s","label","htmlFor","head__field","type","input","onChange","id","btn","Component","Container","title","children","container","Button","onClick","contactId","ContactItem","contactItem","btnBox","ContactsList","contacts","onclickBtn","map","contact","contactBox","key","Filter","Message","text","message","App","filter","addContact","newContact","length","some","trim","alert","changeFilter","getVisibleContacts","normalizerFilter","toLocaleLowerCase","includes","deleteContact","idForDel","prevState","prevContact","localStorage","getItem","parseContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","page__wrapper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,YAAc,iCAAiC,IAAM,2B,oBCA1GD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,8B,gBCA5DD,EAAOC,QAAU,CAAC,MAAQ,sBAAsB,YAAc,8B,gBCA9DD,EAAOC,QAAU,CAAC,MAAQ,2B,kBCA1BD,EAAOC,QAAU,CAAC,cAAgB,6B,iBCAlCD,EAAOC,QAAU,CAAC,WAAa,mC,gBCA/BD,EAAOC,QAAU,CAAC,IAAM,sB,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,2B,qMC4EbC,E,4MApEXC,MAAQ,CACJC,KAAM,GACNC,OAAQ,I,EAGZC,aAAeC,c,EACfC,eAAiBD,c,EAEjBE,YAAc,SAAAC,GAAM,IAAD,EACSA,EAAEC,cAAlBP,EADO,EACPA,KAAMQ,EADC,EACDA,MACd,EAAKC,SAAL,eACKT,EAAOQ,K,EAIhBE,cAAgB,SAAAJ,GACZA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKd,OACzB,EAAKe,S,EAGTA,MAAQ,WACJ,EAAKL,SAAS,CACVT,KAAM,GACNC,OAAQ,M,uDAKZ,OACI,0BAAMc,SAAUC,KAAKN,eACjB,2BAAOO,UAAWC,IAAEC,MAAOC,QAASJ,KAAKd,cACrC,yBAAKe,UAAWC,IAAEG,aAAlB,QACA,2BACIC,KAAK,OACLtB,KAAK,OACLiB,UAAWC,IAAEK,MACbf,MAAOQ,KAAKjB,MAAMC,KAClBwB,SAAUR,KAAKX,YACfoB,GAAIT,KAAKd,gBAIjB,2BAAOe,UAAWC,IAAEC,MAAOC,QAASJ,KAAKZ,gBACrC,yBAAKa,UAAWC,IAAEG,aAAlB,UACA,2BACIC,KAAK,MACLtB,KAAK,SACLiB,UAAWC,IAAEK,MACbf,MAAOQ,KAAKjB,MAAME,OAClBuB,SAAUR,KAAKX,YACfoB,GAAIT,KAAKZ,kBAGjB,4BAAQa,UAAWC,IAAEQ,IAAKJ,KAAK,UAA/B,oB,GAxDUK,a,gBCKXC,EATG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACI,yBAAKb,UAAWC,IAAEa,WACd,wBAAId,UAAWC,IAAEW,OAAQA,GACxBC,I,kDCaEE,EAjBA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UACvB,OACI,4BACIjB,UAAWC,IAAEQ,IACbJ,KAAK,SACLW,QAAS,kBAAMA,EAAQC,KAH3B,WCqBOC,EArBK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaH,EAAc,EAAdA,QAChC,OACI,oCACI,yBAAKhB,UAAWC,IAAElB,MAAOoC,EAAYpC,MACrC,yBAAKiB,UAAWC,IAAEjB,QAASmC,EAAYnC,QACvC,yBAAKgB,UAAWC,IAAEmB,QACd,kBAAC,EAAD,CAAQJ,QAASA,EAASC,UAAWE,EAAYX,QCelDa,EApBM,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC9B,OACI,4BACKD,EAASE,KAAI,SAAAC,GAAO,OACjB,wBAAIzB,UAAWC,IAAEyB,WAAYC,IAAKF,EAAQjB,IACtC,kBAAC,EAAD,CAAaW,YAAaM,EAAST,QAASO,U,gBCWjDK,EAnBA,SAAC,GAAyB,IAAvBrC,EAAsB,EAAtBA,MAAOgB,EAAe,EAAfA,SACrB,OACI,2BAAOP,UAAWC,IAAEC,OAChB,yBAAKF,UAAWC,IAAEG,aAAlB,oFACA,2BACIJ,UAAWC,IAAEK,MACbD,KAAK,OACLd,MAAOA,EACPgB,SAAUA,M,iBCJXsB,EAJC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACf,OAAO,yBAAK9B,UAAWC,IAAE8B,SAAUD,ICOlBE,E,4MACjBlD,MAAQ,CACJwC,SAAU,GACVW,OAAQ,I,EAoBZC,WAAa,SAAAC,GAAe,IAChBb,EAAa,EAAKxC,MAAlBwC,SACFH,EAAc,CAChBX,GAAItB,cACJH,KAAMoD,EAAWpD,KACjBC,OAAQmD,EAAWnD,QAGS,IAA5BmC,EAAYpC,KAAKqD,QAA8C,IAA9BjB,EAAYnC,OAAOoD,OAO1Bd,EAASe,MACnC,SAAAZ,GAAO,OAAIA,EAAQ1C,OAASoD,EAAWpD,KAAKuD,UAI5CC,MAAM,GAAD,OAAIJ,EAAWpD,KAAKuD,OAApB,2BAIT,EAAK9C,SAAS,CAAE8B,SAAS,CAAEH,GAAH,mBAAmBG,MAbvCiB,MAAM,+B,EAgBdC,aAAe,SAAAnD,GACX,EAAKG,SAAS,CAAEyC,OAAQ5C,EAAEC,cAAcC,S,EAG5CkD,mBAAqB,WAAO,IAAD,EACM,EAAK3D,MAA1BwC,EADe,EACfA,SACFoB,EAFiB,EACLT,OACcU,oBAChC,OAAOrB,EAASW,QAAO,SAAAR,GAAO,OAC1BA,EAAQ1C,KAAK4D,oBAAoBC,SAASF,O,EAIlDG,cAAgB,SAAAC,GACZ,EAAKtD,UAAS,SAAAuD,GAAS,MAAK,CACxBzB,SAAUyB,EAAUzB,SAASW,QACzB,SAAAe,GAAW,OAAIA,EAAYxC,KAAOsC,U,kEA1D1C,IAAMxB,EAAW2B,aAAaC,QAAQ,YAChCC,EAAgBC,KAAKC,MAAM/B,GAC7B6B,GACApD,KAAKP,SAAS,CAAE8B,SAAU6B,M,yCAIfG,EAAWP,GACtBA,EAAUzB,WAAavB,KAAKjB,MAAMwC,UAClC2B,aAAaM,QACT,WACAH,KAAKI,UAAUzD,KAAKjB,MAAMwC,a,+BAqDlC,IAAMmC,EAAkB1D,KAAK0C,qBAC7B,OACI,yBAAKzC,UAAWC,IAAEyD,eACd,kBAAC,EAAD,CAAW9C,MAAO,aACbb,KAAKjB,MAAMwC,SAASc,OAAS,GAC1B,kBAAC,EAAD,CACI7C,MAAOQ,KAAKjB,MAAMmD,OAClB1B,SAAUR,KAAKyC,eAJ3B,IAQI,kBAAC,EAAD,CAAa5C,SAAUG,KAAKmC,cAGhC,kBAAC,EAAD,CAAWtB,MAAO,YACbb,KAAKjB,MAAMwC,SAASc,OAAS,EAC1B,kBAAC,EAAD,CACId,SAAUmC,EACVlC,WAAYxB,KAAK8C,gBAGrB,kBAAC,EAAD,CAASf,KAAM,6B,GA5FNpB,aCPjCiD,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.0f986130.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3owFx\",\"head__field\":\"ContactForm_head__field__7h9qH\",\"btn\":\"ContactForm_btn__lpDIR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactItem_name__2_Rkn\",\"number\":\"ContactItem_number__3CHN5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__JwxM6\",\"head__field\":\"Filter_head__field__eXYWw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Container_title__33C8b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page__wrapper\":\"App_page__wrapper__2bZmM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactBox\":\"ContactsList_contactBox__2X56_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1sZ3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1ZMLa\"};","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: '',\n    };\n\n    createIdName = uuidv4();\n    createIdNumber = uuidv4();\n\n    saveContact = e => {\n        const { name, value } = e.currentTarget;\n        this.setState({\n            [name]: value,\n        });\n    };\n\n    submitContact = e => {\n        e.preventDefault();\n\n        this.props.OnSubmit(this.state);\n        this.reset();\n    };\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.submitContact}>\n                <label className={s.label} htmlFor={this.createIdName}>\n                    <div className={s.head__field}>Name</div>\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={s.input}\n                        value={this.state.name}\n                        onChange={this.saveContact}\n                        id={this.createIdName}\n                    />\n                </label>\n\n                <label className={s.label} htmlFor={this.createIdNumber}>\n                    <div className={s.head__field}>Number</div>\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        className={s.input}\n                        value={this.state.number}\n                        onChange={this.saveContact}\n                        id={this.createIdNumber}\n                    />\n                </label>\n                <button className={s.btn} type=\"submit\">\n                    Add contact\n                </button>\n            </form>\n        );\n    }\n}\n\nContactForm.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default ContactForm;\n","import React from 'react';\n\nimport s from './Container.module.css';\n\nconst Container = ({ title, children }) => {\n    return (\n        <div className={s.container}>\n            <h2 className={s.title}>{title}</h2>\n            {children}\n        </div>\n    );\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onClick, contactId }) => {\n    return (\n        <button\n            className={s.btn}\n            type=\"button\"\n            onClick={() => onClick(contactId)}\n        >\n            Delete\n        </button>\n    );\n};\n\nButton.propTypes = {\n    onClick: PropTypes.func,\n    contactId: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nimport Button from '../Buttons';\n\nconst ContactItem = ({ contactItem, onClick }) => {\n    return (\n        <>\n            <div className={s.name}>{contactItem.name}</div>\n            <div className={s.number}>{contactItem.number}</div>\n            <div className={s.btnBox}>\n                <Button onClick={onClick} contactId={contactItem.id} />\n            </div>\n        </>\n    );\n};\n\nContactItem.propTypes = {\n    contactItem: PropTypes.shape({\n        name: PropTypes.string,\n        number: PropTypes.string,\n        id: PropTypes.string,\n    }),\n    onClick: PropTypes.func,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactsList.module.css';\n\nimport ContactItem from '../ContactIItem';\n\nconst ContactsList = ({ contacts, onclickBtn }) => {\n    return (\n        <ul>\n            {contacts.map(contact => (\n                <li className={s.contactBox} key={contact.id}>\n                    <ContactItem contactItem={contact} onClick={onclickBtn} />\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nContactsList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n        }),\n    ),\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n    return (\n        <label className={s.label}>\n            <div className={s.head__field}>Фильтр по имени</div>\n            <input\n                className={s.input}\n                type=\"text\"\n                value={value}\n                onChange={onChange}\n            />\n        </label>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n};\n\nexport default Filter;\n","import React from 'react';\n\nimport s from './Message.module.css';\n\nconst Message = ({ text }) => {\n    return <div className={s.message}>{text}</div>;\n};\n\nexport default Message;\n","import React, { Component } from 'react';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './App.module.css';\n\nimport ContactForm from './components/ContactForm';\nimport Container from './components/Container';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\nimport Message from './components/Message';\n\nexport default class App extends Component {\n    state = {\n        contacts: [],\n        filter: '',\n    };\n\n    componentDidMount() {\n        const contacts = localStorage.getItem('contacts');\n        const parseContacts = JSON.parse(contacts);\n        if (parseContacts) {\n            this.setState({ contacts: parseContacts });\n        };\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.contacts !== this.state.contacts) {\n            localStorage.setItem(\n                'contacts',\n                JSON.stringify(this.state.contacts),\n            );\n        };\n    };\n\n    addContact = newContact => {\n        const { contacts } = this.state;\n        const contactItem = {\n            id: uuidv4(),\n            name: newContact.name,\n            number: newContact.number,\n        };\n        const isCorrectInput =\n            contactItem.name.length !== 0 && contactItem.number.length !== 0;\n\n        if (!isCorrectInput) {\n            alert('One or more fields is full');\n            return;\n        };\n\n        const isNewContactDublicate = contacts.some(\n            contact => contact.name === newContact.name.trim(),\n        );\n\n        if (isNewContactDublicate) {\n            alert(`${newContact.name.trim()} is alredy in contacts`);\n            return;\n        }\n\n        this.setState({ contacts: [contactItem, ...contacts] });\n    };\n\n    changeFilter = e => {\n        this.setState({ filter: e.currentTarget.value });\n    };\n\n    getVisibleContacts = () => {\n        const { contacts, filter } = this.state;\n        const normalizerFilter = filter.toLocaleLowerCase();\n        return contacts.filter(contact =>\n            contact.name.toLocaleLowerCase().includes(normalizerFilter),\n        );\n    };\n\n    deleteContact = idForDel => {\n        this.setState(prevState => ({\n            contacts: prevState.contacts.filter(\n                prevContact => prevContact.id !== idForDel,\n            ),\n        }));\n    };\n\n    render() {\n        const visibleContacts = this.getVisibleContacts();\n        return (\n            <div className={s.page__wrapper}>\n                <Container title={'Phonebook'}>\n                    {this.state.contacts.length > 1 && (\n                        <Filter\n                            value={this.state.filter}\n                            onChange={this.changeFilter}\n                        />\n                    )}\n                    ;\n                    <ContactForm OnSubmit={this.addContact} />\n                </Container>\n\n                <Container title={'Contacts'}>\n                    {this.state.contacts.length > 0 ? (\n                        <ContactsList\n                            contacts={visibleContacts}\n                            onclickBtn={this.deleteContact}\n                        />\n                    ) : (\n                        <Message text={'Phonebook is empty'} />\n                    )}\n                </Container>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}